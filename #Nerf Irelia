if myHero.charName ~= "Irelia" then return end
 -- [[  #Nerf Irelia by tyanitarx]] --
 
 require "VPrediction"
 
 local aarange, qrange, erange, rrange = 125, 650, 325, 1200
 local qspeed, espeed, rspeed = 2200, math.huge, 779
 local qdelay, edelay, rdelay = 0, 0.5, 0.5
 local rwidth = 30
 local ts
 local VP
 local igniteslot = nil
 local BWCslot = nil
 local trinityslot = nil
 local ruinedkingslot = nil
 local MinionManager = nil

function OnProcessSpell(object, spell)
	if object == myHero then
	local ultcount
		if spell.name:lower():find("IreliaTranscendentBlades") then
		ultcount = ultcount + 1
		end
	end
end

function OnLoad()
 
ts = TargetSelector(TARGET_LESS_CAST_PRIORITY, 1000)
Menu()
PrintChat(">>>#Nerf Irelia by tyanitarx Loaded!<<<<")
VP = VPrediction()
SummonerChecks()
MinionManager = minionManager(MINION_ENEMY, 650, myHero, MINIONS_SORT_HEALTH_ASC)


 end
 
function OnTick()

ts:update()
ItemChecks()
Combo()
AutoKS()
AutoStun()
MinionManager:update() 
FarmQ()
Ignite()


end

function SummonerChecks()
	if myHero:GetSpellData(SUMMONER_1).name:find("SummonerDot") then
        igniteslot = SUMMONER_1
    elseif myHero:GetSpellData(SUMMONER_2).name:find("SummonerDot") then
        igniteslot = SUMMONER_2
	else 
		igniteslot = nil
    end
end


function ItemChecks()

BWCslot = GetInventorySlotItem(3144)
ruinedkingslot = GetInventorySlotItem(3153)
trinityslot = GetInventorySlotItem(3078)

end



function Combo()
	if menu.Combo and ts.target ~= nil then
		if GetDistance(ts.target, myHero) < 650 and myHero:CanUseSpell(_Q) == READY and myHero:CanUseSpell(_W) == READY then
		CastSpell(_W)
		CastSpell(_Q, ts.target)
		end
		
		if myHero:CanUseSpell(_Q) == READY then
		CastSpell(_Q, ts.target)
		end
		
		if myHero:CanUseSpell(_E) == READY then
		CastSpell(_E, ts.target)
		end
		
		if menu.UseR and myHero:CanUseSpell(_R) == READY and GetDistance(ts.target, myHero) < 300 then 
		
		CastPosition, HitChance, Position = VP:GetLineCastPosition(ts.target, rdelay, rwidth, rrange, rspeed, myHero)
			if HitChance >= 2 then
			CastSpell(_R, CastPosition.x, CastPosition.y)
			end
			
			if ultcount == 1 then
				CastPosition2, HitChance, Position = VP:GetLineCastPosition(ts.target, rdelay, rwidth, rrange, rspeed, myHero)
				if HitChance >= 2 then
				CastSpell(_R, CastPosition2.x, CastPosition2.y)
				end
			end
			
			if ultcount == 2 then
				CastPosition3, HitChance, Position = VP:GetLineCastPosition(ts.target, rdelay, rwidth, rrange, rspeed, myHero)
				if HitChance >= 2 then
				CastSpell(_R, CastPosition3.x, CastPosition3.y)
				end
			end 
			
			if ultcount == 3 then
				CastPosition4, HitChance, Position = VP:GetLineCastPosition(ts.target, rdelay, rwidth, rrange, rspeed, myHero)
				if HitChance >= 2 then
				CastSpell(_R, CastPosition4.x, CastPosition4.y)
				end
			end
		end
	
		
		if menu.UseItems then
			if BWCslot ~= nil and myHero:CanUseSpell(BWCslot) then
			CastSpell(BWCslot, ts.target)	
			end
			if ruinedkingslot ~= nil and myHero:CanUseSpell(ruinedkingslot) then
			CastSpell(ruinedkingslot, ts.target)	
			end
			
		end
		
	end
end

function FarmQ() 
	if myHero:CanUseSpell(_Q) == READY and menu.FarmQ then
		for i, minion in pairs(MinionManager.objects) do 
			if minion ~= nil and minion.valid and minion.health < (getDmg("Q", minion, myHero) + getDmg("AD", minion, myHero)) then
				CastSpell(_Q, minion)
			end
		end 
	end
end


function AutoKS()
	if menu.AutoKS and ts.target ~= nil  then
		if myHero:CanUseSpell(_Q) == READY and (getDmg("Q", ts.target, myHero) + getDmg("AD", ts.target, myHero)) > ts.target.health then
		CastSpell(_Q, ts.target)
		end
	end
end
	
function Ignite()
    if menu.UseSummoners and myHero:CanUseSpell(igniteslot) == READY then
        local ignitedmg = 0
        for i = 1, heroManager.iCount, 1 do
            local enemyhero = heroManager:getHero(i)
            if ValidTarget(enemyhero, 600) then
                ignitedmg = 50 + 20 * myHero.level
                if enemyhero.health <= ignitedmg then
                    CastSpell(igniteslot, enemyhero)
                end
            end
        end
    end
end

function AutoStun()
	if menu.AutoStun and ts.target ~= nil and myHero.health / myHero.maxHealth <= ts.target.health / ts.target.maxHealth and GetDistance(ts.target, myHero) < 425 then
	CastSpell(_E, ts.target)
	end
end
	
function Menu()
menu = scriptConfig("#Nerf Irelia", "Irelia")
menu:addParam("Combo", "Combo", SCRIPT_PARAM_ONKEYDOWN, false, 32)
menu:addParam("AutoKS", "AutoKS", SCRIPT_PARAM_ONKEYTOGGLE, false, string.byte("X"))
menu:addParam("UseItems", "Use Items", SCRIPT_PARAM_ONOFF, false)
menu:addParam("UseSummoners", "Use Summoners", SCRIPT_PARAM_ONOFF, false)
menu:addParam("FarmQ", "Farm with Q", SCRIPT_PARAM_ONKEYTOGGLE, false, string.byte("C"))
menu:addParam("AutoStun", "Auto Stun", SCRIPT_PARAM_ONKEYTOGGLE, false, string.byte("M"))
menu:addParam("UseR", "Use Ult in Combo", SCRIPT_PARAM_ONOFF, false)
ts.name = "Irelia"
menu:addTS(ts)
end
